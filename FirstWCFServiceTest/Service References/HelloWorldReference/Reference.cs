//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FirstWCFServiceTest.HelloWorldReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HelloFault", Namespace="http://antra.net")]
    [System.SerializableAttribute()]
    public partial class HelloFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDescription {
            get {
                return this.ErrorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescriptionField, value) != true)) {
                    this.ErrorDescriptionField = value;
                    this.RaisePropertyChanged("ErrorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/FirstWCFService")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://antra.net", ConfigurationName="HelloWorldReference.IHelloworldService")]
    public interface IHelloworldService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://antra.net/IHelloworldService/GetEmployeeName", ReplyAction="http://antra.net/IHelloworldService/GetEmployeeNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FirstWCFServiceTest.HelloWorldReference.HelloFault), Action="http://antra.net/IHelloworldService/GetEmployeeNameHelloFaultFault", Name="HelloFault")]
        string GetEmployeeName(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://antra.net/IHelloworldService/GetEmployeeName", ReplyAction="http://antra.net/IHelloworldService/GetEmployeeNameResponse")]
        System.Threading.Tasks.Task<string> GetEmployeeNameAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://antra.net/IHelloworldService/GetEmployee", ReplyAction="http://antra.net/IHelloworldService/GetEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FirstWCFServiceTest.HelloWorldReference.HelloFault), Action="http://antra.net/IHelloworldService/GetEmployeeHelloFaultFault", Name="HelloFault")]
        FirstWCFServiceTest.HelloWorldReference.Employee GetEmployee(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://antra.net/IHelloworldService/GetEmployee", ReplyAction="http://antra.net/IHelloworldService/GetEmployeeResponse")]
        System.Threading.Tasks.Task<FirstWCFServiceTest.HelloWorldReference.Employee> GetEmployeeAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://antra.net/IHelloworldService/Divide", ReplyAction="http://antra.net/IHelloworldService/DivideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FirstWCFServiceTest.HelloWorldReference.HelloFault), Action="http://antra.net/IHelloworldService/DivideHelloFaultFault", Name="HelloFault")]
        int Divide(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://antra.net/IHelloworldService/Divide", ReplyAction="http://antra.net/IHelloworldService/DivideResponse")]
        System.Threading.Tasks.Task<int> DivideAsync(int a, int b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHelloworldServiceChannel : FirstWCFServiceTest.HelloWorldReference.IHelloworldService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloworldServiceClient : System.ServiceModel.ClientBase<FirstWCFServiceTest.HelloWorldReference.IHelloworldService>, FirstWCFServiceTest.HelloWorldReference.IHelloworldService {
        
        public HelloworldServiceClient() {
        }
        
        public HelloworldServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HelloworldServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloworldServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloworldServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetEmployeeName(int ID) {
            return base.Channel.GetEmployeeName(ID);
        }
        
        public System.Threading.Tasks.Task<string> GetEmployeeNameAsync(int ID) {
            return base.Channel.GetEmployeeNameAsync(ID);
        }
        
        public FirstWCFServiceTest.HelloWorldReference.Employee GetEmployee(int ID) {
            return base.Channel.GetEmployee(ID);
        }
        
        public System.Threading.Tasks.Task<FirstWCFServiceTest.HelloWorldReference.Employee> GetEmployeeAsync(int ID) {
            return base.Channel.GetEmployeeAsync(ID);
        }
        
        public int Divide(int a, int b) {
            return base.Channel.Divide(a, b);
        }
        
        public System.Threading.Tasks.Task<int> DivideAsync(int a, int b) {
            return base.Channel.DivideAsync(a, b);
        }
    }
}
